name: Build, Push, Restart Deployment and Notify

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Concurrency: one deployment per branch at a time
concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  # STAGING JOB
  staging:
    if: github.ref_name == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push staging image
        id: docker-build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sakachris/ecom-api:latest-staging

      - name: Set up kubectl
        if: success()
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl get nodes

      - name: Restart staging deployments
        if: success()
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl rollout restart deployment ecom-backend-staging -n ecom-api
          kubectl rollout restart deployment ecom-celery-worker-staging -n ecom-api

      # ✅ SUCCESS EMAIL
      - name: Send success email (staging)
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✅ Staging Deployment Successful"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: "Deployment Bot <${{ secrets.EMAIL_USERNAME }}>"
          secure: true
          body: |
            The staging deployment for branch 'develop' was successful.
            Docker tag: latest-staging
            Deployments restarted: ecom-backend-staging, ecom-celery-worker-staging
            Commit: ${{ github.sha }}
            Timestamp: ${{ github.event.head_commit.timestamp }}

      # ❌ FAILURE EMAIL
      - name: Send failure email (staging)
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ Staging Deployment Failed"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: "Deployment Bot <${{ secrets.EMAIL_USERNAME }}>"
          secure: true
          body: |
            The staging deployment for branch 'develop' has failed.
            Please check the GitHub Actions logs for details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Commit: ${{ github.sha }}
            Timestamp: ${{ github.event.head_commit.timestamp }}

  # PRODUCTION JOB
  production:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push production image
        id: docker-build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sakachris/ecom-api:latest-production

      - name: Set up kubectl
        if: success()
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl get nodes

      - name: Restart production deployments
        if: success()
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl rollout restart deployment ecom-backend -n ecom-api
          kubectl rollout restart deployment ecom-celery-worker -n ecom-api

      # ✅ SUCCESS EMAIL
      - name: Send success email (production)
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✅ Production Deployment Successful"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: "Deployment Bot <${{ secrets.EMAIL_USERNAME }}>"
          secure: true
          body: |
            The production deployment for branch 'main' was successful.
            Docker tag: latest-production
            Deployments restarted: ecom-backend, ecom-celery-worker
            Commit: ${{ github.sha }}
            Timestamp: ${{ github.event.head_commit.timestamp }}

      # ❌ FAILURE EMAIL
      - name: Send failure email (production)
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ Production Deployment Failed"
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: "Deployment Bot <${{ secrets.EMAIL_USERNAME }}>"
          secure: true
          body: |
            The production deployment for branch 'main' has failed.
            Please check the GitHub Actions logs for details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Commit: ${{ github.sha }}
            Timestamp: ${{ github.event.head_commit.timestamp }}
